generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Empresa {
  id_empresa      Int                   @id @default(autoincrement()) @map("id_empresa")
  nombre          String                @unique
  tieneSucursales Boolean               @default(false)
  solicitantes    Solicitante[]
  visitas         Visita[]              @relation("Empresa_Visita")
  tickets         FreshdeskTicket[]
  companyMaps     FreshdeskCompanyMap[]
}

model Solicitante {
  id_solicitante  Int                     @id @default(autoincrement()) @map("id_solicitante")
  nombre          String
  email           String?
  telefono        String?
  empresaId       Int
  clienteId       Int?                    @unique
  googleUserId    String?                 @unique
  isActive        Boolean                 @default(true)
  microsoftUserId String?                 @unique
  accountType     AccountType?
  sucursalId      Int?
  empresa         Empresa                 @relation(fields: [empresaId], references: [id_empresa])
  equipos         Equipo[]
  visitas         Visita[]                @relation("Solicitante_Visita")
  historiales     Historial[]             @relation("Solicitante_Historial")
  tickets         FreshdeskTicket[]
  requesterMaps   FreshdeskRequesterMap[]

  @@index([empresaId])
  @@index([accountType])
  @@index([isActive])
  @@index([sucursalId])
}

model Equipo {
  id_equipo     Int             @id @default(autoincrement()) @map("id_equipo")
  idSolicitante Int
  serial        String
  marca         String
  modelo        String
  procesador    String
  ram           String
  disco         String
  propiedad     String
  solicitante   Solicitante     @relation(fields: [idSolicitante], references: [id_solicitante])
  equipo        DetalleEquipo[]

  @@index([idSolicitante])
}

model DetalleEquipo {
  id         Int     @id @default(autoincrement()) @map("id_detalle_equipo")
  idEquipo   Int
  macWifi    String?
  so         String?
  tipoDd     String?
  estadoAlm  String?
  office     String?
  teamViewer String?
  claveTv    String?
  revisado   String?
  equipo     Equipo? @relation(fields: [idEquipo], references: [id_equipo])

  @@index([idEquipo])
}

model Historial {
  tecnicoId          Int
  solicitante        String
  inicio             DateTime
  fin                DateTime
  realizado          String?
  solicitanteId      Int
  actualizaciones    Boolean     @default(false)
  antivirus          Boolean     @default(false)
  ccleaner           Boolean     @default(false)
  estadoDisco        Boolean     @default(false)
  licenciaOffice     Boolean     @default(false)
  licenciaWindows    Boolean     @default(false)
  mantenimientoReloj Boolean     @default(false)
  rendimientoEquipo  Boolean     @default(false)
  ecografo           Boolean      @default(false)
  id                 Int         @id @default(autoincrement()) @map("id_historial")
  direccion_visita   String?
  tecnico            Tecnico      @relation(fields: [tecnicoId], references: [id_tecnico])
  solicitanteRef     Solicitante? @relation("Solicitante_Historial", fields: [solicitanteId], references: [id_solicitante])

  @@index([tecnicoId])
  @@index([solicitanteId])
}

model RefreshToken {
  id                Int       @id @default(autoincrement())
  userId            Int
  rtHash            String
  createdAt         DateTime  @default(now())
  expiresAt         DateTime
  revokedAt         DateTime?
  replacedByTokenId Int?
  userAgent         String?
  ip                String?
  user              Tecnico   @relation(fields: [userId], references: [id_tecnico])

  @@index([rtHash])
  @@index([userId])
}

model Tecnico {
  id_tecnico   Int            @id @default(autoincrement()) @map("id_tecnico")
  nombre       String
  email        String         @unique
  passwordHash String
  status       Boolean        @default(true)
  tokens       RefreshToken[]
  historiales  Historial[]
  visitas      Visita[]
}

model Visita {
  id_visita          Int          @id @default(autoincrement())
  empresaId          Int
  tecnicoId          Int
  solicitante        String
  inicio             DateTime
  fin                DateTime?
  confImpresoras     Boolean      @default(false)
  confTelefonos      Boolean      @default(false)
  confPiePagina      Boolean      @default(false)
  otros              Boolean      @default(false)
  otrosDetalle       String?
  status             EstadoVisita @default(PENDIENTE)
  solicitanteId      Int?
  actualizaciones    Boolean      @default(false)
  antivirus          Boolean      @default(false)
  ccleaner           Boolean      @default(false)
  estadoDisco        Boolean      @default(false)
  licenciaOffice     Boolean      @default(false)
  licenciaWindows    Boolean      @default(false)
  mantenimientoReloj Boolean      @default(false)
  rendimientoEquipo  Boolean      @default(false)
  ecografo           Boolean      @default(false)
  direccion_visita   String?
  empresa            Empresa      @relation("Empresa_Visita", fields: [empresaId], references: [id_empresa])
  tecnico            Tecnico      @relation(fields: [tecnicoId], references: [id_tecnico])
  solicitanteRef     Solicitante? @relation("Solicitante_Visita", fields: [solicitanteId], references: [id_solicitante])

  @@index([empresaId])
  @@index([tecnicoId])
  @@index([solicitanteId])
}

/// Mapea company_id de Freshdesk y/o dominio de correo → tu Empresa
model FreshdeskCompanyMap {
  companyId BigInt  @id
  empresaId Int
  domain    String?
  empresa   Empresa @relation(fields: [empresaId], references: [id_empresa])

  @@index([empresaId])
  @@index([domain])
}

/// Mapa estable para enlazar requester (contacto de FD) → Solicitante local
model FreshdeskRequesterMap {
  requesterId   BigInt      @id
  solicitanteId Int
  empresaId     Int
  solicitante   Solicitante @relation(fields: [solicitanteId], references: [id_solicitante])

  @@index([empresaId])
  @@index([solicitanteId])
}

/// Ticket de Freshdesk ligado a tu Empresa y al Solicitante que lo creó
model FreshdeskTicket {
  id                BigInt       @id
  subject           String
  status            Int
  priority          Int
  type              String?
  requesterEmail    String?
  createdAt         DateTime
  updatedAt         DateTime
  source            String?
  capturedAt        DateTime?
  empresaId         Int?
  solicitanteId     Int?
  ticketOrgId       Int?
  ticketRequesterId Int?
  empresa           Empresa?     @relation(fields: [empresaId], references: [id_empresa])
  solicitante       Solicitante? @relation(fields: [solicitanteId], references: [id_solicitante])

  @@index([empresaId])
  @@index([solicitanteId])
  @@index([requesterEmail])
  @@index([createdAt])
  @@index([ticketOrgId])
  @@index([ticketRequesterId])
}

model FdSourceMap {
  id          Int     @id @default(autoincrement())
  companyId   BigInt? @unique
  domain      String? @unique
  ticketOrgId Int

  @@index([ticketOrgId])
}

model TicketOrg {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model TicketRequester {
  id            Int      @id @default(autoincrement())
  name          String
  email         String?  @unique
  phone         String?
  fdRequesterId BigInt?  @unique
  ticketOrgId   Int?
  createdAt     DateTime @default(now())
  updatedAt     DateTime

  @@index([ticketOrgId])
}

model EquipoProducto {
  id            Int      @id @default(autoincrement())
  nombre        String
  descripcion   String?
  precio        Decimal
  stock         Int      @default(0)
  marca         String
  modelo        String
  estado        String
  creadoEn      DateTime @default(now())
  actualizadoEn DateTime
}

model Cliente {
  id       Int    @id @default(autoincrement())
  nombre   String
  telefono String
  email    String @unique
}

model detalle_empresas {
  id         Int    @id @default(autoincrement())
  rut        String @unique
  direccion  String
  telefono   String
  email      String
  empresa_id Int    @unique
}

model detalle_trabajos {
  id            Int       @id @default(autoincrement())
  fecha_ingreso DateTime
  fecha_egreso  DateTime?
  trabajo       String
  accesorios    String?
  prioridad     Prioridad
  estado        String
  notas         String?
  empresa_id    Int?
  equipo_id     Int?
  tecnico_id    Int?
}

model MsSku {
  skuId         String  @id
  skuPartNumber String
  displayName   String?
}

model SolicitanteMsLicense {
  id            Int       @id @default(autoincrement())
  solicitanteId Int
  skuId         String
  assignedAt    DateTime? @default(now())

  @@unique([solicitanteId, skuId])
  @@index([skuId])
  @@index([solicitanteId])
}

model Sucursal {
  id_sucursal Int     @id @default(autoincrement())
  nombre      String
  direccion   String?
  telefono    String?
  empresaId   Int
}

enum EstadoVisita {
  PENDIENTE
  COMPLETADA
  CANCELADA
}

enum Prioridad {
  baja
  normal
  alta
}

enum AccountType {
  google
  microsoft
}
